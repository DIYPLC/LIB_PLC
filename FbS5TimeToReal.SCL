FUNCTION_BLOCK FbS5TimeToReal //Конвертор S5TIME в милисекунды.
TITLE = 'FbS5TimeToReal'

{//Атрибуты для PCS7.
S7_read_back := 'true' ; //CFC: Chart>Readback активен для прототипов DB.
S7_blockview := 'big'    //CFC: отображение блока маленькое или большое.
}

//Атрибуты для STEP7.
VERSION : '1.0'
AUTHOR  : VA
FAMILY  : LIB_PLC

VAR_INPUT //Входные переменные, сохраняемые.
X:S5TIME:=T#0s; //Вход S5TIME 16 бит BCD.
//Представим это слово как 2 байта...
LocalStructTime AT X: STRUCT
ArrayByte:ARRAY[0..1] OF BYTE;
END_STRUCT;
END_VAR

VAR_OUTPUT //Выходные переменные, сохраняемые.
Y:REAL:=0.0; //Выход милисекунды.
END_VAR

VAR //Внутренние переменные, сохраняемые.
Digit1:INT:=0; //Единицы BCD.
Digit10:INT:=0; //Десятки BCD.
Digit100:INT:=0; //Сотни BCD.
Base:INT:=0; //База 2 бита (BCD*10^(Base+1)).
END_VAR

//Разбиваем BCD на части по 4 бита
//Байты в слове поменяны местами из за архитектуры процессора.
Digit1   :=BYTE_TO_INT(LocalStructTime.ArrayByte[1] AND 2#0000_1111);
Digit10  :=BYTE_TO_INT(LocalStructTime.ArrayByte[1] AND 2#1111_0000)/16;
Digit100 :=BYTE_TO_INT(LocalStructTime.ArrayByte[0] AND 2#0000_1111);
Base     :=BYTE_TO_INT(LocalStructTime.ArrayByte[0] AND 2#0011_0000)/16;
//Вычислем количество милисекунд согласно спецификации формата S5TIME.
Y:=( 10**(INT_TO_REAL(Base+1)) ) * 
(
INT_TO_REAL(Digit100*100) + 
INT_TO_REAL(Digit10*10) + 
INT_TO_REAL(Digit1)
);

END_FUNCTION_BLOCK

// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// Date start LIB_PLC: 2014
// License: GNU GPL-2.0-or-later
// https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
// https://www.youtube.com/watch?v=n1F_MfLRlX0
// https://www.youtube.com/@DIY_PLC
// https://github.com/DIYPLC/LIB_PLC
// https://oshwlab.com/diy.plc.314/PLC_HW1_SW1
// https://3dtoday.ru/3d-models/mechanical-parts/body/korpus-na-din-reiku
// https://t.me/DIY_PLC
