FUNCTION_BLOCK FbCounter //Счетчик импульсов.
TITLE = 'Счетчик импульсов.'

//         DbCounter
//    +-----------------+
//    |    FbCounter    |
// ->-|INC           CNT|->-
//   -|DEC      OVERFLOW|-
//   -|RESET            |
//   -|SETVALUE         |
//   -|VALUE            |
//    +-----------------+

{//Атрибуты для PCS7.
S7_read_back := 'true' ; //CFC: Chart>Readback активен для прототипов DB.
S7_blockview := 'big'    //CFC: отображение блока маленькое или большое.
}

//Атрибуты для STEP7.
VERSION : '2.1'
AUTHOR  : VA
FAMILY  : LIB_PLC

VAR_INPUT //Входные переменные, сохраняемые.
INC      :BOOL := FALSE; //Вход импульсов +1.
DEC      :BOOL := FALSE; //Вход импульсов -1.
RESET    :BOOL := FALSE; //Сбросить счетчик на 0.
SETVALUE :BOOL := FALSE; //Установить на выходе значение VALUE.
VALUE    :DINT := 0    ; //Предустановленное значение счета.
END_VAR

VAR_OUTPUT //Выходные переменные, сохраняемые.
CNT      :DINT := 0    ; //Выход счетчика.
OVERFLOW :BOOL := FALSE; //Флаг переполнения счетчика.
END_VAR

VAR //Внутренние переменные, сохраняемые.
INCPrevios :BOOL := FALSE; //Предыдущее состояние входа +1.
DECPrevios :BOOL := FALSE; //Предыдущее состояние входа -1.
END_VAR

CONST //Константы.
LIMIT_MAX :=  2147483647; //Максимальное значение счетчика.
LIMIT_MIN := -2147483648; //Минимальное значение счетчика.
END_CONST

//Прямой счет по нарастающему фронту импульсов +1.
IF (INC AND NOT(INCPrevios)) THEN
    IF (CNT >= LIMIT_MAX) THEN //Ограничение сверху.
    CNT := LIMIT_MAX;
    OVERFLOW := TRUE;
    ELSE //Прямой счет.
    CNT := CNT + 1;
    OVERFLOW := FALSE;
    END_IF;
END_IF;

//Обратный счет по нарастающему фронту импульсов -1.
IF (DEC AND NOT(DECPrevios)) THEN
    IF (CNT <= LIMIT_MIN) THEN //Ограничение снизу.
    CNT := LIMIT_MIN;
    OVERFLOW := TRUE;
    ELSE //Обратный счет.
    CNT := CNT - 1;
    OVERFLOW := FALSE;
    END_IF;
END_IF;

//Установить значение счетчика.
IF (SETVALUE) THEN
CNT := VALUE;
END_IF;

//Сбросить счетчик.
IF (RESET) THEN
CNT := 0;
END_IF;

//Запомнить предыдущее состояние входа.
INCPrevios := INC;
DECPrevios := DEC;

END_FUNCTION_BLOCK

//  +---------+
//  | GNU GPL |
//  +---------+
//  |
//  |
//  .= .-_-. =.
// ((_/)o o(\_))
//  `-'(. .)`-'
//  |/| \_/ |\
//  ( |     | )
//  /"\_____/"\
//  \__)   (__/
// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// Date: 2014 - 2024
// License: GNU GPL-2.0-or-later
// https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
// https://www.youtube.com/watch?v=n1F_MfLRlX0
//
// See also:
// https://www.youtube.com/@DIY_PLC
// https://github.com/DIYPLC/LIB_PLC
// https://oshwlab.com/diy.plc.314/PLC_HW1_SW1
// https://3dtoday.ru/3d-models/mechanical-parts/body/korpus-na-din-reiku
// https://t.me/DIY_PLC
