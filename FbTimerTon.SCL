FUNCTION_BLOCK FbTimerTon //TON - Таймер с задержкой на включение.

//        DbTimerTon
//    +----------------+
//    |   FbTimerTon   |
// ->-|In           Out|->-
//   -|TimeDelayOn     |
//   -|Ts_ms           |
//    +----------------+

//Атрибуты для STEP7.
TITLE   = 'TON - Таймер с задержкой на включение.'
VERSION : '2.0'
AUTHOR  : 'VA'
FAMILY  : LibPlc
{//Атрибуты для PCS7.
S7_read_back := 'true' ; //CFC: Chart>Readback активен для прототипов DB.
S7_blockview := 'big'  ; //CFC: отображение блока мелнькое или большое.
//Опции компилятора SCL.
GenerateReferenceData := 'y' ; //SCL: Генерировать перекрестные ссылки.
CreateDebugInfo       := 'y' ; //SCL: Генерировать оладочную информацию.
SetOKFlag             := 'y' ; //SCL: ENO = 1
MonitorArrayLimits    := 'y' ; //SCL: Следить за границами массивов.
OptimizeObjectCode    := 'y'   //SCL: Оптимизация объектного кода.
}

VAR_INPUT //Входные переменные, сохраняемые.
In          :BOOL := FALSE; //Вход таймера.
TimeDelayOn :DINT := 5000 ; //Время задержки включения [мс].
Ts_ms       :DINT := 100  ; //Шаг дискретизации по времени [мс].
END_VAR

VAR_OUTPUT //Выходные переменные, сохраняемые.
Out :BOOL := FALSE; //Выход таймера.
END_VAR

VAR //Внутренние переменные, сохраняемые.
Timer1 :DINT := 0; //Текущее время таймер1 [мс].
END_VAR

IF (TimeDelayOn > 0) THEN //Таймер включен.
  IF (In) THEN //На входе 1.
    IF (Out) THEN //На выходе 1.
    Out := TRUE;
    Timer1 := 0;
    ELSE //На выходе 0.
      IF (Timer1 >= TimeDelayOn) THEN //Задержка включения закончилась.
      Out := TRUE;
      Timer1 := 0;
      ELSE //Задержка включения активна.
      Out := FALSE;
      Timer1 := Timer1 + Ts_ms;
      END_IF;
    END_IF;
  ELSE //Если на входе 0 то на выходе тоже 0.
  Out := FALSE;
  Timer1 := 0;
  END_IF;
ELSE //Таймер выключен.
Out := In;
Timer1 := 0;
END_IF;

END_FUNCTION_BLOCK

// Применение.
//
// При поступлении входного сигнала выходной сигнал появляется не сразу, а с задержкой TimeDelayOn.
// Блок может применятся как фильтр дребезга контактов дискретных входов.
// Совместно с инвертором может применяться для генерации импульсов.

// Временная характеристика.
//
//  In
//  ^
//  | TimeDelayOn           TimeDelayOn
//  |   |<--->|               |<--->|
// 1|   ***********     * *   ***********
//  |   *         *     * *   *         *
// 0*****---------*************---------*****----> t[s]
//
//  Out
//  ^
//  | TimeDelayOn           TimeDelayOn
//  |   |<--->|               |<--->|
// 1|   |     *****           |     *****
//  |   |     *   *           |     *   *
// 0***********---*******************---*****----> t[s]

//  +---------+
//  | GNU GPL |
//  +---------+
//  |
//  |
//  .= .-_-. =.
// ((_/)o o(\_))
//  `-'(. .)`-'
//  |/| \_/ |\
//  ( |     | )
//  /"\_____/"\
//  \__)   (__/
// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// License: GNU GPL v2
