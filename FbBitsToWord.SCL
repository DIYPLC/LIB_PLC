FUNCTION_BLOCK FbBitsToWord //Преобразование 16 бит в слово.
TITLE = 'Преобразование 16 бит в слово.'

//      DbBitsToWord
//    +--------------+
//    | FbBitsToWord |
// ->-|In0        Out|->-
// ->-|In1           |
// ->-|In2           |
// ->-|In3           |
// ->-|In4           |
// ->-|In5           |
// ->-|In6           |
// ->-|In7           |
// ->-|In8           |
// ->-|In9           |
// ->-|In10          |
// ->-|In11          |
// ->-|In12          |
// ->-|In13          |
// ->-|In14          |
// ->-|In15          |
//    +--------------+

{//Атрибуты для PCS7.
S7_read_back := 'true' ; //CFC: Chart>Readback активен для прототипов DB.
S7_blockview := 'big'    //CFC: отображение блока маленькое или большое.
}

//Атрибуты для STEP7.
VERSION : '2.1'
AUTHOR  : VA
FAMILY  : LIB_PLC

VAR_INPUT //Входные переменные, сохраняемые.
In0  :BOOL := FALSE; //Входной сигнал бит0.
In1  :BOOL := FALSE; //Входной сигнал бит1.
In2  :BOOL := FALSE; //Входной сигнал бит2.
In3  :BOOL := FALSE; //Входной сигнал бит3.
In4  :BOOL := FALSE; //Входной сигнал бит4.
In5  :BOOL := FALSE; //Входной сигнал бит5.
In6  :BOOL := FALSE; //Входной сигнал бит6.
In7  :BOOL := FALSE; //Входной сигнал бит7.
In8  :BOOL := FALSE; //Входной сигнал бит8.
In9  :BOOL := FALSE; //Входной сигнал бит9.
In10 :BOOL := FALSE; //Входной сигнал бит10.
In11 :BOOL := FALSE; //Входной сигнал бит11.
In12 :BOOL := FALSE; //Входной сигнал бит12.
In13 :BOOL := FALSE; //Входной сигнал бит13.
In14 :BOOL := FALSE; //Входной сигнал бит14.
In15 :BOOL := FALSE; //Входной сигнал бит15.
END_VAR

VAR_OUTPUT //Выходные переменные, сохраняемые.
Out :WORD := 0; //Выходной сигнал.
END_VAR

Out:=0;
IF (In0 ) THEN Out:=(Out OR 2#0000000000000001); END_IF;
IF (In1 ) THEN Out:=(Out OR 2#0000000000000010); END_IF;
IF (In2 ) THEN Out:=(Out OR 2#0000000000000100); END_IF;
IF (In3 ) THEN Out:=(Out OR 2#0000000000001000); END_IF;
IF (In4 ) THEN Out:=(Out OR 2#0000000000010000); END_IF;
IF (In5 ) THEN Out:=(Out OR 2#0000000000100000); END_IF;
IF (In6 ) THEN Out:=(Out OR 2#0000000001000000); END_IF;
IF (In7 ) THEN Out:=(Out OR 2#0000000010000000); END_IF;
IF (In8 ) THEN Out:=(Out OR 2#0000000100000000); END_IF;
IF (In9 ) THEN Out:=(Out OR 2#0000001000000000); END_IF;
IF (In10) THEN Out:=(Out OR 2#0000010000000000); END_IF;
IF (In11) THEN Out:=(Out OR 2#0000100000000000); END_IF;
IF (In12) THEN Out:=(Out OR 2#0001000000000000); END_IF;
IF (In13) THEN Out:=(Out OR 2#0010000000000000); END_IF;
IF (In14) THEN Out:=(Out OR 2#0100000000000000); END_IF;
IF (In15) THEN Out:=(Out OR 2#1000000000000000); END_IF;

END_FUNCTION_BLOCK

//  +---------+
//  | GNU GPL |
//  +---------+
//  |
//  |
//  .= .-_-. =.
// ((_/)o o(\_))
//  `-'(. .)`-'
//  |/| \_/ |\
//  ( |     | )
//  /"\_____/"\
//  \__)   (__/
// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// Date: 2014 - 2024
// License: GNU GPL-2.0-or-later
// https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
// https://www.youtube.com/watch?v=n1F_MfLRlX0
//
// See also:
// https://www.youtube.com/@DIY_PLC
// https://github.com/DIYPLC/LIB_PLC
// https://oshwlab.com/diy.plc.314/PLC_HW1_SW1
// https://3dtoday.ru/3d-models/mechanical-parts/body/korpus-na-din-reiku
// https://t.me/DIY_PLC
