FUNCTION_BLOCK FbMonoVibr //Одновибратор (генератор одиночного импульса по нарастающему фронту входного сигнала).

VAR_INPUT //Входные переменные, сохраняемые.
In        :BOOL := FALSE; //Вход.
TimePulse :REAL := 10.0;  //Длительность выходного импульса [с].
Ts        :REAL := 0.1;   //Шаг дискретизации по времени [с].
END_VAR

VAR_OUTPUT //Выходные переменные, сохраняемые.
Out :BOOL := FALSE; //Выход.
END_VAR

VAR //Внутренние переменные, сохраняемые.
Timer1    :REAL := 0.0;   //TON Timer [с].
InPrevios :BOOL := FALSE; //Предыдущее состояние входа для детектора нарастающего фронта.
Trigger1  :BOOL := FALSE; //Встроенный RS- триггер1.
END_VAR

VAR_TEMP //Внутренние переменные, несохраняемые.
Set1:BOOL; //Встроенный RS- триггер1.
Reset1:BOOL; //Встроенный RS- триггер1.
END_VAR

//Детектор нарастающего фронта входного импульса.
Set1 := (In AND NOT(InPrevios));
//Условие сброса RS- триггера1.
Reset1 := (Timer1 >= TimePulse);
//RS- триггер1.
Trigger1 := (Trigger1 OR Set1) AND (NOT(Reset1));

//Управление таймера1 по RS- триггеру.
IF (Trigger1 = TRUE) THEN
Timer1 := Timer1 + Ts;
ELSE
Timer1 := 0.0;
END_IF;

//Выходной импульс.
Out := Trigger1;

//Запомнить предидущее состояние входа.
InPrevios := In;
END_FUNCTION_BLOCK

(*
Одновибратор = Monostable Multivibrator
Блок предназначен для генерации импульса заданной длительности по на-
растающему фронту входного сигнала. Если длительность входных импульсов 
меньше длительности выходных, то фронты входных импульсов пришедшие, ко-
гда выход=1 игнорируются.
*)

//  +---------+
//  | GNU GPL |
//  +---------+
//  |
//  |
//  .= .-_-. =.
// ((_/)o o(\_))
//  `-'(. .)`-'
//  |/| \_/ |\
//  ( |     | )
//  /"\_____/"\
//  \__)   (__/
// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// License: GNU GPL v2
//
// https://www.youtube.com/@DIY_PLC
// https://github.com/DIYPLC
