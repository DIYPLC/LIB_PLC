FUNCTION_BLOCK FbDriverMM440PPO3 //Управление приводом SIEMENS MICROMASTER 440 по PROFIBUS PD.
TITLE = 'Управление приводом SIEMENS MICROMASTER 440 по PROFIBUS PD.'
//PROFIDRIVE profile PPO 3.

//      DbDriverMM440PPO3
//    +-------------------+
//    | FbDriverMM440PPO3 |
//   -|ADR_I           FPV|-
//   -|ADR_Q           ERR|->-
// ->-|FSP             ALM|-
// ->-|FWD             RUN|-
//   -|REV                |
//   -|RST                |
//    +-------------------+

{//Атрибуты для PCS7.
S7_read_back := 'true' ; //CFC: Chart>Readback активен для прототипов DB.
S7_blockview := 'big'    //CFC: отображение блока маленькое или большое.
}

//Атрибуты для STEP7.
VERSION : '1.1'
AUTHOR  : VA
FAMILY  : LIB_PLC

VAR_INPUT //Входные переменные.
ADR_I :DINT := 256;   //Стартовый адрес IW256? в HardWare.
ADR_Q :DINT := 256;   //Стартовый адрес QW256? в HardWare.
FMAX  :REAL := 60.0;  //Максимальная частота Гц ММ440 Р2000, Р1082.
FSP   :REAL := 25.0;  //Заданое значение частоты Гц.
FWD   :BOOL := FALSE; //Вкл вперед.
REV   :BOOL := FALSE; //Вкл назад.
RST   :BOOL := FALSE; //Сброс ошибки привода импусьсом или перезагрузка по питанию привода.
END_VAR

VAR_OUTPUT //Выходные переменные.
FPV  :REAL := 0.0;   //Измереное значение частоты -FMAX...0...FMAX [Гц].
ERR  :BOOL := FALSE; //Ошибка привода.
ALM  :BOOL := FALSE; //Предупреждение от привода.
RUN  :BOOL := FALSE; //Привод в работе.
END_VAR

VAR //Внутренние сохраняемые переменные.

iZSW1      :WORD := W#16#0000; //Слово состояния 1.
iHIW       :WORD := W#16#0000; //Фактическая скорость.

qSTW1      :WORD := W#16#0000; //Слово управления 1.
qHSW       :WORD := W#16#0000; //Заданая скорость.

qSTW1_B0  : BOOL := FALSE; //Готовность к работе OFF1.
qSTW1_B1  : BOOL := FALSE; //Немедленная блокировка импульсов OFF2.
qSTW1_B2  : BOOL := FALSE; //Быстрая остановка OFF3.
qSTW1_B3  : BOOL := FALSE; //Управление в замунутой системе и деблокировка импульсов.
qSTW1_B4  : BOOL := FALSE; //Деблокировка задатчика интенсивности.
qSTW1_B5  : BOOL := FALSE; //Деблокировка задатчика интенсивности.
qSTW1_B6  : BOOL := FALSE; //Деблокировка задания.
qSTW1_B7  : BOOL := FALSE; //Квитирование ошибки.
qSTW1_B8  : BOOL := FALSE; //Толчок вправо.
qSTW1_B9  : BOOL := FALSE; //Толчок влево.
qSTW1_B10 : BOOL := FALSE; //Передать уставку скорости.
qSTW1_B11 : BOOL := FALSE; //Инверсия уставки.
qSTW1_B12 : BOOL := FALSE; //Не используется.
qSTW1_B13 : BOOL := FALSE; //Мотор потенциометр - вверх.
qSTW1_B14 : BOOL := FALSE; //Мотор потенциометр - вниз.
qSTW1_B15 : BOOL := FALSE; //Локальное управление с частотника.

iZSW1_B0  : BOOL := FALSE; //Готовность к включению.
iZSW1_B1  : BOOL := FALSE; //Готовность к работе.
iZSW1_B2  : BOOL := FALSE; //Работа разрешена.
iZSW1_B3  : BOOL := FALSE; //Ошибка.
iZSW1_B4  : BOOL := FALSE; //Не команда OFF2.
iZSW1_B5  : BOOL := FALSE; //Не команда OFF3.
iZSW1_B6  : BOOL := FALSE; //Блокировка включения.
iZSW1_B7  : BOOL := FALSE; //Предупреждение.
iZSW1_B8  : BOOL := FALSE; //Ошибка по скорости в допустимых пределах.
iZSW1_B9  : BOOL := FALSE; //Требуется управление от ПЛК.
iZSW1_B10 : BOOL := FALSE; //Достигнута максимальная частота.
iZSW1_B11 : BOOL := FALSE; //Достигнут предельный ток двигателя.
iZSW1_B12 : BOOL := FALSE; //Управление механическим тормозом.
iZSW1_B13 : BOOL := FALSE; //Не перегрузка двигателя.
iZSW1_B14 : BOOL := FALSE; //Вращение вправо.
iZSW1_B15 : BOOL := FALSE; //Не перегрузка I или t.

DbTON :TON; //Таймер для сигнала сброса.
END_VAR

//Читать слова из сети.
iZSW1   := PIW[ADR_I + 0];
iHIW    := PIW[ADR_I + 2];

//Измеренное значение частоты FVD.
FPV := (INT_TO_REAL(WORD_TO_INT(iHIW)) / 16384.0) * FMAX;

//Декодирование слова состояния ZSW.
iZSW1_B0  := ((iZSW1 AND W#2#0000_0000_0000_0001) = W#2#0000_0000_0000_0001);
iZSW1_B1  := ((iZSW1 AND W#2#0000_0000_0000_0010) = W#2#0000_0000_0000_0010);
iZSW1_B2  := ((iZSW1 AND W#2#0000_0000_0000_0100) = W#2#0000_0000_0000_0100);
iZSW1_B3  := ((iZSW1 AND W#2#0000_0000_0000_1000) = W#2#0000_0000_0000_1000);
iZSW1_B4  := ((iZSW1 AND W#2#0000_0000_0001_0000) = W#2#0000_0000_0001_0000);
iZSW1_B5  := ((iZSW1 AND W#2#0000_0000_0010_0000) = W#2#0000_0000_0010_0000);
iZSW1_B6  := ((iZSW1 AND W#2#0000_0000_0100_0000) = W#2#0000_0000_0100_0000);
iZSW1_B7  := ((iZSW1 AND W#2#0000_0000_1000_0000) = W#2#0000_0000_1000_0000);
iZSW1_B8  := ((iZSW1 AND W#2#0000_0001_0000_0000) = W#2#0000_0001_0000_0000);
iZSW1_B9  := ((iZSW1 AND W#2#0000_0010_0000_0000) = W#2#0000_0010_0000_0000);
iZSW1_B10 := ((iZSW1 AND W#2#0000_0100_0000_0000) = W#2#0000_0100_0000_0000);
iZSW1_B11 := ((iZSW1 AND W#2#0000_1000_0000_0000) = W#2#0000_1000_0000_0000);
iZSW1_B12 := ((iZSW1 AND W#2#0001_0000_0000_0000) = W#2#0001_0000_0000_0000);
iZSW1_B13 := ((iZSW1 AND W#2#0010_0000_0000_0000) = W#2#0010_0000_0000_0000);
iZSW1_B14 := ((iZSW1 AND W#2#0100_0000_0000_0000) = W#2#0100_0000_0000_0000);
iZSW1_B15 := ((iZSW1 AND W#2#1000_0000_0000_0000) = W#2#1000_0000_0000_0000);

//Привод в работе.
RUN := ABS(FPV) >= 0.5;

//Ошибка привода.
ERR := iZSW1_B3;

//Предупреждение от привода.
ALM := iZSW1_B7;

// Заданное значение частоты FVD.
// P2000 = 60Hz = 16#4000 = 16384.0
IF (FMAX >= 1.0) THEN
qHSW :=INT_TO_WORD(REAL_TO_INT( (FSP / FMAX) * 16384.0 ));
END_IF;

// Кодирование слова управления STW1.
// STOP / CONTROL ENABLE
qSTW1 := W#16#047E;

// Включить вращение вперед.
IF (FWD  AND NOT(REV)) THEN
qSTW1 := W#16#047F;
END_IF;

// Включить вращение назад.
IF (REV AND NOT(FWD)) THEN
qSTW1 := W#16#0C7F;
END_IF;

// Сброс ошибки.
// WinCC RST=1 manual, PLC RST=0 auto timer 5s.
DbTON.IN := RST;
DbTON.PT := T#5S;
DbTON();
IF (RST) THEN
qSTW1 := W#16#04FE;
END_IF;
IF (DbTON.Q) THEN
RST := FALSE;
END_IF;

//Декодирование слова управления STW1.
qSTW1_B0  := ((qSTW1 AND W#2#0000_0000_0000_0001) = W#2#0000_0000_0000_0001);
qSTW1_B1  := ((qSTW1 AND W#2#0000_0000_0000_0010) = W#2#0000_0000_0000_0010);
qSTW1_B2  := ((qSTW1 AND W#2#0000_0000_0000_0100) = W#2#0000_0000_0000_0100);
qSTW1_B3  := ((qSTW1 AND W#2#0000_0000_0000_1000) = W#2#0000_0000_0000_1000);
qSTW1_B4  := ((qSTW1 AND W#2#0000_0000_0001_0000) = W#2#0000_0000_0001_0000);
qSTW1_B5  := ((qSTW1 AND W#2#0000_0000_0010_0000) = W#2#0000_0000_0010_0000);
qSTW1_B6  := ((qSTW1 AND W#2#0000_0000_0100_0000) = W#2#0000_0000_0100_0000);
qSTW1_B7  := ((qSTW1 AND W#2#0000_0000_1000_0000) = W#2#0000_0000_1000_0000);
qSTW1_B8  := ((qSTW1 AND W#2#0000_0001_0000_0000) = W#2#0000_0001_0000_0000);
qSTW1_B9  := ((qSTW1 AND W#2#0000_0010_0000_0000) = W#2#0000_0010_0000_0000);
qSTW1_B10 := ((qSTW1 AND W#2#0000_0100_0000_0000) = W#2#0000_0100_0000_0000);
qSTW1_B11 := ((qSTW1 AND W#2#0000_1000_0000_0000) = W#2#0000_1000_0000_0000);
qSTW1_B12 := ((qSTW1 AND W#2#0001_0000_0000_0000) = W#2#0001_0000_0000_0000);
qSTW1_B13 := ((qSTW1 AND W#2#0010_0000_0000_0000) = W#2#0010_0000_0000_0000);
qSTW1_B14 := ((qSTW1 AND W#2#0100_0000_0000_0000) = W#2#0100_0000_0000_0000);
qSTW1_B15 := ((qSTW1 AND W#2#1000_0000_0000_0000) = W#2#1000_0000_0000_0000);

// Записать слов по сети.
PQW[ADR_Q + 0]  := qSTW1;
PQW[ADR_Q + 2]  := qHSW;

(*

Настройки SIEMENS MICROMASTER 440 отличные от заводских:
-Сброс преобразователя
P0010=30 потом P0970=1
Подтвердить что частота сети 50Гц.
P0003=3 Экспертный доступ
-Базовый ввод в эксплуатацию.
Р0010=1 потом...
Р0304=220В напряжение двигателя.
Р0305=1.64А ток двигателя.
Р0307=0.25КВт мощность двигателя.
Р0308=0.65 COSФ двигателя.
Р0309=? КПД двигателя.
Р0310=50 Гц часота двигателя.
Р0311=1340 об/мин двигателя.
Р3900=3 конец базового ввода в эксплуатацию.
-Настройки технологические.
Р0205=1 Переменный момент на валу для насосов.
Р1300=2 Квадратичное V/f-регулирование для насосов.
Р1080=10Гц Минимальная частота.
Р1082=60Гц Максимальная частота.
Р2000=60Гц Мастабирование.
Р1120=10с Время разгона.
Р1121=10с Время торможения.
-По окончанию этих настроек двигатель покрутить с панели частотника.
-Канал дискретного управления.
Р0700=6 управление по сети.
-Канал задания частоты.
Р1000=6 управление по сети.
-Настройка дискретного выхода
Р0731=52.2 RELAY1 ПЧ в работе.
Р0733=52.3 RELAY3 ПЧ готов.

-Если что.
Р1820=0 нормальное направление чередования фаз. 

Обязательно использовать в проекте обработчики ошибок OB82, OB86, OB122.

Литература:
Романов В.П. Управление электроприводом Микромастер 440 по сети PROFIBUS. 2010.pdf

*)

// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// Date start LIB_PLC: 2014
// License: GNU GPL-2.0-or-later
// https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
// https://www.youtube.com/watch?v=n1F_MfLRlX0
// https://www.youtube.com/@DIY_PLC
// https://github.com/DIYPLC/LIB_PLC
// https://oshwlab.com/diy.plc.314/PLC_HW1_SW1
// https://3dtoday.ru/3d-models/mechanical-parts/body/korpus-na-din-reiku
// https://t.me/DIY_PLC

END_FUNCTION_BLOCK
