FUNCTION_BLOCK FbSum1bit //Сумматор 1бит.
TITLE = 'FbSum1bit'

{//Атрибуты для PCS7.
S7_read_back := 'true' ; //CFC: Chart>Readback активен для прототипов DB.
S7_blockview := 'big'    //CFC: отображение блока маленькое или большое.
}

//Атрибуты для STEP7.
VERSION : '1.0'
AUTHOR  : VA
FAMILY  : LIB_PLC

VAR_INPUT //Входные переменные.
A   :BOOL := FALSE; //Первое слагаемое.
B   :BOOL := FALSE; //Второе слагаемое.
Cin :BOOL := FALSE; //Входной флаг переноса при сложении.
END_VAR

VAR_OUTPUT //Выходные переменные.
S    :BOOL := FALSE; //Сумма.
Cout :BOOL := FALSE; //Выходной флаг переноса при сложении.
END_VAR

//Сумма.
S := (NOT(A) AND NOT(B) AND Cin) OR (NOT(A) AND B AND NOT(Cin)) OR (A AND NOT(B) AND NOT(Cin)) OR (A AND B AND Cin);
//Перенос.
Cout := (NOT(A) AND B AND Cin) OR (A AND NOT(B) AND Cin) OR (A AND B AND NOT(Cin)) OR (A AND B AND Cin);

END_FUNCTION_BLOCK

(*
Таблица истинности сумматора.
+---+---+-----+---+------+
| A | B | Cin | S | Cout |
+---+---+-----+---+------+
| 0 | 0 | 0   | 0 | 0    |
+---+---+-----+---+------+
| 0 | 0 | 1   | 1 | 0    |
+---+---+-----+---+------+
| 0 | 1 | 0   | 1 | 0    |
+---+---+-----+---+------+
| 0 | 1 | 1   | 0 | 1    |
+---+---+-----+---+------+
| 1 | 0 | 0   | 1 | 0    |
+---+---+-----+---+------+
| 1 | 0 | 1   | 0 | 1    |
+---+---+-----+---+------+
| 1 | 1 | 0   | 0 | 1    |
+---+---+-----+---+------+
| 1 | 1 | 1   | 1 | 1    |
+---+---+-----+---+------+
Получившийся сумматор состоит из 31ой элементарной операций типа И,ИЛИ,НЕ.
Данная реализация самая наглядная но не факт, что оптимальная.
Сумма формируется 4мя дешифраторами соединенными по схеме ИЛИ.
Флаг переноса формируется 4мя дешифраторами соединенными по схеме ИЛИ.
Сумматор подходит для целых 8битных чисел без знаком 0...255. (тестировано.)
Сумматор подходит для целых 7битных чисел со знаком -127...127. (надо протестировать заем...)
*)

//  +---------+
//  | GNU GPL |
//  +---------+
//  |
//  |
//  .= .-_-. =.
// ((_/)o o(\_))
//  `-'(. .)`-'
//  |/| \_/ |\
//  ( |     | )
//  /"\_____/"\
//  \__)   (__/
// @COPYLEFT ALL WRONGS RESERVED :)
// Author: VA
// Contacts: DIY.PLC.314@gmail.com
// License: GNU GPL v2
//
// https://www.youtube.com/@DIY_PLC
// https://github.com/DIYPLC
